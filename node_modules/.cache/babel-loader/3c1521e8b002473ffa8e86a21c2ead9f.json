{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\Animal\\\\src\\\\component\\\\Employee\\\\LoginComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport Logo from '../../imges/elephen.png';\nimport { Form, Input, Col, Card, Row, Button, message } from 'antd';\nimport { EmployeeLogin } from '../../api/EmployeeApis';\nimport { withCookies } from 'react-cookie';\nimport CheckLoginComponent from '../CheckLogin/CheckLoginComponent';\nimport { LoginStatus } from '../../api/CheckLoginApis';\n\nconst mapStateToProps = state => {\n  return {\n    propsData: state\n  };\n};\n\nconst layout = {\n  labelCol: {\n    span: 8\n  }\n};\nconst {\n  Item\n} = Form;\n\nclass LoginComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = async e => {\n      const {\n        cookies\n      } = this.props;\n      let login = await EmployeeLogin(e);\n\n      if (login.res.code === \"200\") {\n        message.success(login.res.message);\n        cookies.set('token_cookie', login.token[0].login_token_number, {\n          path: '/'\n        });\n        cookies.set('userName', login.user[0], {\n          path: '/'\n        });\n        let token = cookies.cookies.token_cookie,\n            loginStatus = await LoginStatus({\n          token\n        }),\n            tokenStat = loginStatus.user[0].expri_stat;\n\n        if (tokenStat === true) {\n          cookies.remove('token_cookie', {\n            path: '/'\n          });\n          cookies.remove('userName', {\n            path: '/'\n          });\n          this.props.dispatch({\n            'type': 'logout'\n          });\n        } else {\n          this.props.dispatch({\n            'type': 'userLogin',\n            'data': loginStatus.user[0]\n          });\n        }\n      } else {\n        message.error(login.res.message);\n        cookies.remove('token_cookie', {\n          path: '/'\n        });\n        cookies.remove('userName', {\n          path: '/'\n        });\n        this.props.dispatch({\n          'type': 'logout'\n        });\n      }\n    };\n\n    this.onLogout = () => {\n      let {\n        cookies\n      } = this.props;\n      cookies.remove('token_cookie', {\n        path: '/'\n      });\n      cookies.remove('userName', {\n        path: '/'\n      });\n      message.success('Logout');\n      this.props.dispatch({\n        'type': 'logout'\n      });\n    };\n  }\n\n  render() {\n    const loginBox = this.props.propsData.user === undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"USER NAME\",\n      name: \"user\",\n      rules: [{\n        required: true,\n        message: 'Please input your USER NAME!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"PASSWORD\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your PASSWORD!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"\\u0E22\\u0E34\\u0E19\\u0E14\\u0E35\\u0E15\\u0E49\\u0E2D\\u0E19\\u0E23\\u0E31\\u0E1A\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, `คุณ  ${this.props.propsData.user.employee_fname} ${this.props.propsData.user.employee_lname}`, \" \")));\n    return /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      cover: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        style: {\n          width: '200px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }), loginBox, /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: 'primary',\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: 'primary',\n      danger: true,\n      onClick: this.onLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, \"LOGOUT\")), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/regit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: \"link\",\n      onClick: this.onRegit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, \"ลงทะเบียน\"))))));\n  }\n\n}\n\nexport default withCookies(connect(mapStateToProps)(LoginComponent));","map":{"version":3,"sources":["D:/www/Animal/src/component/Employee/LoginComponent.jsx"],"names":["React","connect","Link","Redirect","Logo","Form","Input","Col","Card","Row","Button","message","EmployeeLogin","withCookies","CheckLoginComponent","LoginStatus","mapStateToProps","state","propsData","layout","labelCol","span","Item","LoginComponent","Component","onFinish","e","cookies","props","login","res","code","success","set","token","login_token_number","path","user","token_cookie","loginStatus","tokenStat","expri_stat","remove","dispatch","error","onLogout","render","loginBox","undefined","required","employee_fname","employee_lname","textAlign","width","offset","onRegit"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Logo from '../../imges/elephen.png'\r\nimport { Form, Input, Col, Card, Row, Button, message } from 'antd'\r\nimport { EmployeeLogin } from '../../api/EmployeeApis'\r\nimport { withCookies } from 'react-cookie'\r\nimport CheckLoginComponent from '../CheckLogin/CheckLoginComponent'\r\nimport { LoginStatus } from '../../api/CheckLoginApis'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        propsData: state\r\n    }\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 }\r\n}\r\n\r\nconst { Item } = Form\r\nclass LoginComponent extends React.Component {\r\n\r\n    onFinish = async (e) => {\r\n        const { cookies } = this.props\r\n        let login = await EmployeeLogin(e)\r\n\r\n        if (login.res.code === \"200\") {\r\n            message.success(login.res.message)\r\n            cookies.set('token_cookie', login.token[0].login_token_number, { path: '/' })\r\n            cookies.set('userName', login.user[0], { path: '/' })\r\n\r\n            let token = cookies.cookies.token_cookie,\r\n                loginStatus = await LoginStatus({ token }),\r\n                tokenStat = loginStatus.user[0].expri_stat\r\n\r\n            if (tokenStat === true) {\r\n                cookies.remove('token_cookie', { path: '/' })\r\n                cookies.remove('userName', { path: '/' })\r\n                this.props.dispatch({\r\n                    'type': 'logout'\r\n                })\r\n\r\n            } else {\r\n                this.props.dispatch({\r\n                    'type': 'userLogin',\r\n                    'data': loginStatus.user[0]\r\n                })\r\n            }\r\n        } else {\r\n\r\n            message.error(login.res.message)\r\n            cookies.remove('token_cookie', { path: '/' })\r\n            cookies.remove('userName', { path: '/' })\r\n            this.props.dispatch({\r\n                'type': 'logout'\r\n            })\r\n        }\r\n    }\r\n\r\n    onLogout = () => {\r\n        let { cookies } = this.props\r\n        cookies.remove('token_cookie', { path: '/' })\r\n        cookies.remove('userName', { path: '/' })\r\n        message.success('Logout')\r\n        this.props.dispatch({\r\n            'type': 'logout'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const loginBox = (this.props.propsData.user === undefined) ?\r\n            <div>\r\n                <Form.Item\r\n                    label=\"USER NAME\"\r\n                    name=\"user\"\r\n                    rules={[{ required: true, message: 'Please input your USER NAME!' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"PASSWORD\"\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your PASSWORD!' }]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n            </div>\r\n            :\r\n            <div>\r\n                <Form.Item\r\n                    wrapperCol={{ span: 24 }}\r\n              \r\n                >\r\n                    <h1>ยินดีต้อนรับ</h1>\r\n                    <h2>{`คุณ  ${this.props.propsData.user.employee_fname} ${this.props.propsData.user.employee_lname}`} </h2>\r\n\r\n                </Form.Item>\r\n            </div>\r\n\r\n        return (\r\n            <Row justify=\"center\">\r\n                <Card\r\n                    cover={<div style={{ textAlign: \"center\" }}>\r\n                        <img src={Logo} style={{ width: '200px' }} />\r\n                    </div>}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        {loginBox}\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Button block type={'primary'} htmlType={\"submit\"}>{\"LOGIN\"}</Button>\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Button block type={'primary'} danger onClick={this.onLogout}>{\"LOGOUT\"}</Button>\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Link to=\"/regit\" >\r\n                                <Button\r\n                                    block\r\n                                    type={\"link\"}\r\n                                    onClick={this.onRegit}\r\n                                >\r\n                                    {\"ลงทะเบียน\"}\r\n                                </Button>\r\n                            </Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(connect(mapStateToProps)(LoginComponent))"]},"metadata":{},"sourceType":"module"}
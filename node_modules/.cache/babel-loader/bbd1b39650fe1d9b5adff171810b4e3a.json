{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react.js\\\\animal-client\\\\src\\\\component\\\\Employee\\\\RegiterComponent.jsx\";\nimport React from 'react';\nimport { Form, Input, Row, Button, Select, DatePicker } from 'antd';\nimport { EmployeeRegiterApi, EmployeePrefixApi } from '../../api/EmployeeApis';\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 12\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nclass RegiterComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.FormFinish = async e => {\n      console.log(e); // let resulutRegiter = await EmployeeRegiterApi(e)\n      // console.log(resulutRegiter)\n    };\n\n    this.state = {\n      prefix: []\n    };\n  }\n\n  async componentDidMount() {\n    let resultPrefix = await EmployeePrefixApi();\n    this.setState({\n      prefix: resultPrefix.rows\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      onFinish: this.FormFinish,\n      style: {\n        width: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E40\\u0E25\\u0E02\\u0E1B\\u0E23\\u0E30\\u0E08\\u0E33\\u0E15\\u0E31\\u0E27\\u0E1B\\u0E23\\u0E30\\u0E0A\\u0E32\\u0E0A\\u0E19\",\n      name: \"cid\",\n      rules: [{\n        required: true,\n        message: 'Please input your cid!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E04\\u0E33\\u0E19\\u0E33\",\n      name: \"prefix\",\n      rules: [{\n        required: true,\n        message: 'Please input your prefix!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, this.state.prefix.map((a, b) => /*#__PURE__*/React.createElement(Option, {\n      key: b,\n      value: a.employee_prefix_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, a.employee_prefix_description)))), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\",\n      name: \"fName\",\n      rules: [{\n        required: true,\n        message: 'Please input your firstName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E19\\u0E32\\u0E21\\u0E2A\\u0E01\\u0E38\\u0E25\",\n      name: \"lName\",\n      rules: [{\n        required: true,\n        message: 'Please input your lastName!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E27\\u0E31\\u0E19/\\u0E40\\u0E14\\u0E37\\u0E2D\\u0E19/\\u0E1B\\u0E35 (\\u0E27\\u0E31\\u0E19\\u0E40\\u0E01\\u0E34\\u0E14)\",\n      name: \"birthDay\",\n      rules: [{\n        required: true,\n        message: 'Please input your birthDay!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      defaultValue: \"YYYY-MM-DD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"Email\",\n      name: \"email\",\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E40\\u0E1A\\u0E2D\\u0E23\\u0E4C\\u0E42\\u0E17\\u0E23\\u0E28\\u0E31\\u0E1E\",\n      name: \"phone\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"USER\",\n      name: \"user\",\n      rules: [{\n        required: true,\n        message: 'Please input your user!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"PASSWORD\",\n      name: \"passWord\",\n      rules: [{\n        required: true,\n        message: 'Please input your passWord!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, 'Submit'))));\n  }\n\n}\n\nexport default RegiterComponent;","map":{"version":3,"sources":["I:/ANYcode/react.js/animal-client/src/component/Employee/RegiterComponent.jsx"],"names":["React","Form","Input","Row","Button","Select","DatePicker","EmployeeRegiterApi","EmployeePrefixApi","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","RegiterComponent","Component","constructor","FormFinish","e","console","log","state","prefix","componentDidMount","resultPrefix","setState","rows","render","width","required","message","map","a","b","employee_prefix_id","employee_prefix_description"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, Input, Row, Button, Select, DatePicker } from 'antd'\r\nimport { EmployeeRegiterApi, EmployeePrefixApi } from '../../api/EmployeeApis'\r\n\r\nconst { Option } = Select\r\nconst layout = {\r\n    labelCol: { span: 12 },\r\n    wrapperCol: { span: 24 }\r\n}\r\n\r\nconst tailLayout = {\r\n    wrapperCol: {\r\n        offset: 8,\r\n        span: 16,\r\n    },\r\n}\r\n\r\nclass RegiterComponent extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            prefix: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let resultPrefix = await EmployeePrefixApi()\r\n\r\n        this.setState({\r\n            prefix: resultPrefix.rows\r\n        })\r\n    }\r\n\r\n    FormFinish = async (e) => {\r\n        console.log(e)\r\n       // let resulutRegiter = await EmployeeRegiterApi(e)\r\n       // console.log(resulutRegiter)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row justify=\"center\">\r\n                <Form\r\n                    {...layout}\r\n                    onFinish={this.FormFinish}\r\n                    style={{ width: '400px' }}\r\n                >\r\n                    <Form.Item\r\n                        label=\"เลขประจำตัวประชาชน\"\r\n                        name=\"cid\"\r\n                        rules={[{ required: true, message: 'Please input your cid!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"คำนำ\"\r\n                        name=\"prefix\"\r\n                        rules={[{ required: true, message: 'Please input your prefix!' }]}\r\n                    >\r\n                        <Select>\r\n                            {this.state.prefix.map((a, b) =>\r\n                                <Option key={b} value={a.employee_prefix_id}>{a.employee_prefix_description}</Option>\r\n                            )}\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"ชื่อ\"\r\n                        name=\"fName\"\r\n                        rules={[{ required: true, message: 'Please input your firstName!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"นามสกุล\"\r\n                        name=\"lName\"\r\n                        rules={[{ required: true, message: 'Please input your lastName!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"วัน/เดือน/ปี (วันเกิด)\"\r\n                        name=\"birthDay\"\r\n                        rules={[{ required: true, message: 'Please input your birthDay!' }]}\r\n                    >\r\n                        <DatePicker\r\n                        defaultValue =\"YYYY-MM-DD\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        rules={[{ required: true, message: 'Please input your email!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"เบอร์โทรศัพ\"\r\n                        name=\"phone\"\r\n                        rules={[{ required: true, message: 'Please input your phone!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"USER\"\r\n                        name=\"user\"\r\n                        rules={[{ required: true, message: 'Please input your user!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"PASSWORD\"\r\n                        name=\"passWord\"\r\n                        rules={[{ required: true, message: 'Please input your passWord!' }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailLayout} >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            {'Submit'}\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegiterComponent"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"I:\\\\ANYcode\\\\react.js\\\\animal-client\\\\src\\\\component\\\\Employee\\\\LoginComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport Logo from '../../imges/elephen.png';\nimport { Form, Input, Col, Card, Row, Button, message } from 'antd';\nimport { EmployeeLogin } from '../../api/EmployeeApis';\nimport { withCookies } from 'react-cookie';\nimport CheckLoginComponent from '../CheckLogin/CheckLoginComponent';\nimport { LoginStatus } from '../../api/CheckLoginApis';\n\nconst mapStateToProps = state => {\n  return {\n    propsData: state,\n    key: ''\n  };\n};\n\nconst layout = {\n  labelCol: {\n    span: 8\n  }\n};\n\nclass LoginComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.onFinish = async e => {\n      cookies.remove('token_cookie', {\n        path: '/'\n      });\n      cookies.remove('userName', {\n        path: '/'\n      });\n      let login = await EmployeeLogin(e),\n          {\n        cookies\n      } = this.props;\n\n      if (login.res.code === \"200\") {\n        message.success(login.res.message);\n        cookies.set('token_cookie', login.token[0].login_token_number, {\n          path: '/'\n        });\n        cookies.set('userName', login.user[0], {\n          path: '/'\n        });\n        let token = cookies.cookies.token_cookie;\n        let loginStatus = await LoginStatus({\n          token\n        }),\n            tokenStat = loginStatus.user[0].expri_stat;\n\n        if (tokenStat === true) {\n          cookies.remove('token_cookie', {\n            path: '/'\n          });\n          cookies.remove('userName', {\n            path: '/'\n          });\n        } else {\n          this.props.dispatch({\n            'type': 'userLogin',\n            'data': loginStatus.user[0]\n          });\n        }\n      } else {\n        message.error(login.res.message);\n        cookies.remove('token_cookie', {\n          path: '/'\n        });\n        cookies.remove('userName', {\n          path: '/'\n        });\n      }\n    };\n\n    this.onLogout = () => {\n      let {\n        cookies\n      } = this.props;\n      cookies.remove('token_cookie', {\n        path: '/'\n      });\n      cookies.remove('userName', {\n        path: '/'\n      });\n      message.success('Logout');\n      this.props.dispatch({\n        'type': 'logout'\n      });\n    };\n\n    this.state = {\n      key: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      cover: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 28\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        style: {\n          width: '200px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n      onFinish: this.onFinish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"USER NAME\",\n      name: \"user\",\n      rules: [{\n        required: true,\n        message: 'Please input your USER NAME!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"PASSWORD\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your PASSWORD!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: 'primary',\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, \"LOGIN\")), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: 'primary',\n      danger: true,\n      onClick: this.onLogout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"LOGOUT\")), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        span: 24,\n        offset: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/regit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: \"link\",\n      onClick: this.onRegit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"ลงทะเบียน\"))))));\n  }\n\n}\n\nexport default withCookies(connect(mapStateToProps)(LoginComponent));","map":{"version":3,"sources":["I:/ANYcode/react.js/animal-client/src/component/Employee/LoginComponent.jsx"],"names":["React","connect","Link","Redirect","Logo","Form","Input","Col","Card","Row","Button","message","EmployeeLogin","withCookies","CheckLoginComponent","LoginStatus","mapStateToProps","state","propsData","key","layout","labelCol","span","LoginComponent","Component","constructor","onFinish","e","cookies","remove","path","login","props","res","code","success","set","token","login_token_number","user","token_cookie","loginStatus","tokenStat","expri_stat","dispatch","error","onLogout","render","textAlign","width","required","offset","onRegit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiCC,GAAjC,EAAsCC,MAAtC,EAA8CC,OAA9C,QAA6D,MAA7D;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED,KADR;AAEHE,IAAAA,GAAG,EAAE;AAFF,GAAP;AAIH,CALD;;AAOA,MAAMC,MAAM,GAAG;AACXC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR;AADC,CAAf;;AAGA,MAAMC,cAAN,SAA6BvB,KAAK,CAACwB,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,QAPc,GAOH,MAAOC,CAAP,IAAa;AACpBC,MAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA/B;AACAF,MAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B;AACA,UAAIC,KAAK,GAAG,MAAMnB,aAAa,CAACe,CAAD,CAA/B;AAAA,UACI;AAAEC,QAAAA;AAAF,UAAc,KAAKI,KADvB;;AAGA,UAAID,KAAK,CAACE,GAAN,CAAUC,IAAV,KAAmB,KAAvB,EAA8B;AAC1BvB,QAAAA,OAAO,CAACwB,OAAR,CAAgBJ,KAAK,CAACE,GAAN,CAAUtB,OAA1B;AACAiB,QAAAA,OAAO,CAACQ,GAAR,CAAY,cAAZ,EAA4BL,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAeC,kBAA3C,EAA+D;AAAER,UAAAA,IAAI,EAAE;AAAR,SAA/D;AACAF,QAAAA,OAAO,CAACQ,GAAR,CAAY,UAAZ,EAAwBL,KAAK,CAACQ,IAAN,CAAW,CAAX,CAAxB,EAAuC;AAAET,UAAAA,IAAI,EAAE;AAAR,SAAvC;AACA,YAAIO,KAAK,GAAGT,OAAO,CAACA,OAAR,CAAgBY,YAA5B;AACA,YAAIC,WAAW,GAAG,MAAM1B,WAAW,CAAC;AAAEsB,UAAAA;AAAF,SAAD,CAAnC;AAAA,YACIK,SAAS,GAAGD,WAAW,CAACF,IAAZ,CAAiB,CAAjB,EAAoBI,UADpC;;AAEA,YAAID,SAAS,KAAK,IAAlB,EAAwB;AACpBd,UAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA/B;AACAF,UAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2B;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAA3B;AAEH,SAJD,MAIO;AACH,eAAKE,KAAL,CAAWY,QAAX,CAAoB;AAChB,oBAAQ,WADQ;AAEhB,oBAAQH,WAAW,CAACF,IAAZ,CAAiB,CAAjB;AAFQ,WAApB;AAKH;AACJ,OAlBD,MAkBO;AACH5B,QAAAA,OAAO,CAACkC,KAAR,CAAcd,KAAK,CAACE,GAAN,CAAUtB,OAAxB;AACAiB,QAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA/B;AACAF,QAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2B;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAA3B;AACH;AACJ,KApCa;;AAAA,SAsCdgB,QAtCc,GAsCH,MAAM;AACb,UAAI;AAAElB,QAAAA;AAAF,UAAc,KAAKI,KAAvB;AACAJ,MAAAA,OAAO,CAACC,MAAR,CAAe,cAAf,EAA+B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA/B;AACAF,MAAAA,OAAO,CAACC,MAAR,CAAe,UAAf,EAA2B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA3B;AACAnB,MAAAA,OAAO,CAACwB,OAAR,CAAgB,QAAhB;AACA,WAAKH,KAAL,CAAWY,QAAX,CAAoB;AAChB,gBAAQ;AADQ,OAApB;AAGH,KA9Ca;;AAEV,SAAK3B,KAAL,GAAa;AACTE,MAAAA,GAAG,EAAE;AADI,KAAb;AAGH;;AA2CD4B,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AACI,MAAA,KAAK,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACH;AAAK,QAAA,GAAG,EAAE5C,IAAV;AAAgB,QAAA,KAAK,EAAE;AAAE6C,UAAAA,KAAK,EAAE;AAAT,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,IAAD,oBACQ7B,MADR;AAEI,MAAA,QAAQ,EAAE,KAAKM,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAII,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,WADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAEwB,QAAAA,QAAQ,EAAE,IAAZ;AAAkBvC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAJJ,eAWI,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,CAAC;AAAEuC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBvC,QAAAA,OAAO,EAAE;AAA3B,OAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAXJ,eAkBI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAEW,QAAAA,IAAI,EAAE,EAAR;AAAY6B,QAAAA,MAAM,EAAE;AAApB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAE,SAApB;AAA+B,MAAA,QAAQ,EAAE,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoD,OAApD,CADJ,CAlBJ,eAqBI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAE7B,QAAAA,IAAI,EAAE,EAAR;AAAY6B,QAAAA,MAAM,EAAE;AAApB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAE,SAApB;AAA+B,MAAA,MAAM,MAArC;AAAsC,MAAA,OAAO,EAAE,KAAKL,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+D,QAA/D,CADJ,CArBJ,eAwBI,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,UAAU,EAAE;AAAExB,QAAAA,IAAI,EAAE,EAAR;AAAY6B,QAAAA,MAAM,EAAE;AAApB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,OAAO,EAAE,KAAKC,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,WALL,CADJ,CADJ,CAxBJ,CALJ,CADJ,CADJ;AA8CH;;AAhGwC;;AAmG7C,eAAevC,WAAW,CAACZ,OAAO,CAACe,eAAD,CAAP,CAAyBO,cAAzB,CAAD,CAA1B","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport Logo from '../../imges/elephen.png'\r\nimport { Form, Input, Col, Card, Row, Button, message } from 'antd'\r\nimport { EmployeeLogin } from '../../api/EmployeeApis'\r\nimport { withCookies } from 'react-cookie'\r\nimport CheckLoginComponent from '../CheckLogin/CheckLoginComponent'\r\nimport { LoginStatus } from '../../api/CheckLoginApis'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        propsData: state,\r\n        key: ''\r\n    }\r\n}\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 }\r\n}\r\nclass LoginComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            key: ''\r\n        }\r\n    }\r\n\r\n    onFinish = async (e) => {\r\n        cookies.remove('token_cookie', { path: '/' })\r\n        cookies.remove('userName', { path: '/' })\r\n        let login = await EmployeeLogin(e),\r\n            { cookies } = this.props\r\n\r\n        if (login.res.code === \"200\") {\r\n            message.success(login.res.message)\r\n            cookies.set('token_cookie', login.token[0].login_token_number, { path: '/' })\r\n            cookies.set('userName', login.user[0], { path: '/' })\r\n            let token = cookies.cookies.token_cookie\r\n            let loginStatus = await LoginStatus({ token }),\r\n                tokenStat = loginStatus.user[0].expri_stat\r\n            if (tokenStat === true) {\r\n                cookies.remove('token_cookie', { path: '/' })\r\n                cookies.remove('userName', { path: '/' })\r\n\r\n            } else {\r\n                this.props.dispatch({\r\n                    'type': 'userLogin',\r\n                    'data': loginStatus.user[0]\r\n                })\r\n\r\n            }\r\n        } else {\r\n            message.error(login.res.message)\r\n            cookies.remove('token_cookie', { path: '/' })\r\n            cookies.remove('userName', { path: '/' })\r\n        }\r\n    }\r\n\r\n    onLogout = () => {\r\n        let { cookies } = this.props\r\n        cookies.remove('token_cookie', { path: '/' })\r\n        cookies.remove('userName', { path: '/' })\r\n        message.success('Logout')\r\n        this.props.dispatch({\r\n            'type': 'logout'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row justify=\"center\">\r\n                <Card\r\n                    cover={<div style={{ textAlign: \"center\" }}>\r\n                        <img src={Logo} style={{ width: '200px' }} />\r\n                    </div>}\r\n                >\r\n                    <Form\r\n                        {...layout}\r\n                        onFinish={this.onFinish}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"USER NAME\"\r\n                            name=\"user\"\r\n                            rules={[{ required: true, message: 'Please input your USER NAME!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"PASSWORD\"\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your PASSWORD!' }]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Button block type={'primary'} htmlType={\"submit\"}>{\"LOGIN\"}</Button>\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Button block type={'primary'} danger onClick={this.onLogout}>{\"LOGOUT\"}</Button>\r\n                        </Form.Item>\r\n                        <Form.Item wrapperCol={{ span: 24, offset: 0 }}>\r\n                            <Link to=\"/regit\" >\r\n                                <Button\r\n                                    block\r\n                                    type={\"link\"}\r\n                                    onClick={this.onRegit}\r\n                                >\r\n                                    {\"ลงทะเบียน\"}\r\n                                </Button>\r\n                            </Link>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(connect(mapStateToProps)(LoginComponent))"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\Animal\\\\src\\\\component\\\\CheckLogin\\\\CheckLoginComponent.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withCookies } from 'react-cookie';\nimport { Button, Modal } from 'antd';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nconst mapStateToProps = state => {\n  return {\n    propsData: state\n  };\n};\n\nconst warning = () => {\n  Modal.warning({\n    title: 'Loging',\n    content: 'เข้าสู่ะบบก่อนใช้งาน'\n  });\n};\n\nclass CheckLoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      redirect: false\n    };\n  }\n\n  componentWillReceiveProps(input) {\n    console.log(input.nameProps);\n    const {\n      cookies\n    } = this.props;\n    let token = cookies.cookies.token_cookie;\n\n    if (input.nameProps !== \"/login\") {\n      if (token === undefined) {\n        this.setState({\n          redirect: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const redirect = this.state.redirect;\n\n    if (redirect) {\n      this.setState({\n        redirect: false\n      });\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default withCookies(connect(mapStateToProps)(CheckLoginComponent));","map":{"version":3,"sources":["D:/www/Animal/src/component/CheckLogin/CheckLoginComponent.jsx"],"names":["React","connect","withCookies","Button","Modal","Switch","Route","Redirect","mapStateToProps","state","propsData","warning","title","content","CheckLoginComponent","Component","constructor","redirect","componentWillReceiveProps","input","console","log","nameProps","cookies","props","token","token_cookie","undefined","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,SAAS,EAAED;AADR,GAAP;AAGH,CAJD;;AAKA,MAAME,OAAO,GAAG,MAAM;AAClBP,EAAAA,KAAK,CAACO,OAAN,CAAc;AACVC,IAAAA,KAAK,EAAE,QADG;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAAd;AAIH,CALD;;AAOA,MAAMC,mBAAN,SAAkCd,KAAK,CAACe,SAAxC,CAAkD;AAC9CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKP,KAAL,GAAa;AACTQ,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,yBAAyB,CAACC,KAAD,EAAQ;AAE7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,SAAlB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,QAAIC,KAAK,GAAGF,OAAO,CAACA,OAAR,CAAgBG,YAA5B;;AAEA,QAAIP,KAAK,CAACG,SAAN,KAAoB,QAAxB,EAAkC;AAC9B,UAAIG,KAAK,KAAKE,SAAd,EAAyB;AACrB,aAAKC,QAAL,CAAc;AACVX,UAAAA,QAAQ,EAAE;AADA,SAAd;AAGH;AACJ;AAEJ;;AAEDY,EAAAA,MAAM,GAAG;AACL,UAAMZ,QAAQ,GAAG,KAAKR,KAAL,CAAWQ,QAA5B;;AACA,QAAIA,QAAJ,EAAc;AACV,WAAKW,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AArC6C;;AAwClD,eAAef,WAAW,CAACD,OAAO,CAACO,eAAD,CAAP,CAAyBM,mBAAzB,CAAD,CAA1B","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Button, Modal } from 'antd'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        propsData: state\r\n    }\r\n}\r\nconst warning = () => {\r\n    Modal.warning({\r\n        title: 'Loging',\r\n        content: 'เข้าสู่ะบบก่อนใช้งาน',\r\n    })\r\n}\r\n\r\nclass CheckLoginComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(input) {\r\n\r\n        console.log(input.nameProps)\r\n        const { cookies } = this.props\r\n        let token = cookies.cookies.token_cookie\r\n\r\n        if (input.nameProps !== \"/login\") {\r\n            if (token === undefined) {\r\n                this.setState({\r\n                    redirect: true\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const redirect = this.state.redirect\r\n        if (redirect) {\r\n            this.setState({\r\n                redirect: false\r\n            })\r\n            return <Redirect to='/login' />\r\n        }\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(connect(mapStateToProps)(CheckLoginComponent))"]},"metadata":{},"sourceType":"module"}
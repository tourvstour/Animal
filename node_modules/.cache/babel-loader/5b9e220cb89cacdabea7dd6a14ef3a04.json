{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web\\\\react.js\\\\src\\\\component\\\\Animal\\\\subAnimalServey\\\\ModalSearch.jsx\";\nimport React from 'react';\nimport { Modal, Button, Form, Input, Table, message } from 'antd';\nimport { AnimalDataSearch, AnimalDataService } from '../../../api/AnimalApis';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    dataProps: state\n  };\n};\n\nclass ModalSearch extends React.Component {\n  constructor() {\n    super();\n\n    this.onSearch = () => {\n      this.setState({\n        ModalVisibel: true\n      });\n    };\n\n    this.onSubmit = async e => {\n      let varlue = { ...e\n      };\n\n      if (varlue.id === undefined || varlue.id === \"\") {\n        varlue.id = \" \";\n      }\n\n      if (varlue.fName === undefined || varlue.fName === \"\") {\n        varlue.fName = \" \";\n      }\n\n      if (varlue.lName === undefined || varlue.lName === \"\") {\n        varlue.lName = \" \";\n      }\n\n      try {\n        let dataRes = await AnimalDataSearch(varlue);\n        this.setState({\n          searchFromApi: dataRes.result\n        });\n      } catch (err) {\n        message.error('Not Connect to Internet');\n      }\n    };\n\n    this.Tables = async e => {\n      let id = e.animal_id,\n          resultService = await AnimalDataService({\n        id\n      });\n      this.props.dispatch({\n        type: 'serviceList',\n        data: resultService\n      });\n      this.props.dispatch({\n        type: 'animalData',\n        data: e\n      });\n      this.setState({\n        ModalVisibel: false\n      });\n    };\n\n    this.state = {\n      ModalVisibel: false,\n      searchFromApi: []\n    };\n  }\n\n  render() {\n    const columnName = [{\n      title: 'ID',\n      dataIndex: 'animal_id',\n      key: 'animal_id',\n      width: '10%'\n    }, {\n      title: 'ชื่อ',\n      dataIndex: 'animal_fname',\n      key: 'animal_id',\n      width: '15%',\n      render: (text, animal_id) => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.Tables(animal_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 46\n        }\n      }, text)\n    }, {\n      title: 'นามสกุล',\n      dataIndex: 'animal_lname',\n      key: 'animal_id',\n      width: '15%',\n      render: (text, animal_id) => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.Tables(animal_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 46\n        }\n      }, text)\n    }, {\n      title: 'ชื่อเล่น',\n      dataIndex: 'animal_nick_name',\n      key: 'animal_id',\n      width: '15%',\n      render: (text, animal_id) => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.Tables(animal_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 46\n        }\n      }, text)\n    }, {\n      title: 'วันเกิด',\n      dataIndex: 'animal_birthday',\n      key: 'animal_id',\n      width: '15%',\n      render: (text, animal_id) => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.Tables(animal_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 46\n        }\n      }, text)\n    }, {\n      title: 'อายุ',\n      dataIndex: 'animal_age',\n      key: 'animal_id',\n      width: '25%',\n      render: (text, animal_id) => /*#__PURE__*/React.createElement(\"a\", {\n        onClick: () => this.Tables(animal_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 46\n        }\n      }, text)\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, 'ค้นหาข้อมูล'), /*#__PURE__*/React.createElement(Modal, {\n      visible: this.state.ModalVisibel,\n      onCancel: () => this.setState({\n        ModalVisibel: false\n      }),\n      footer: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      labelCol: {\n        sm: {\n          span: 3\n        },\n        lg: {\n          span: 3\n        }\n      },\n      onFinish: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"id\",\n      label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"fName\",\n      label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E08\\u0E23\\u0E34\\u0E07\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E40\\u0E25\\u0E48\\u0E19\",\n      name: \"lName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      wrapperCol: {\n        lg: {\n          span: 8,\n          offset: 3\n        },\n        md: {\n          span: 24,\n          offset: 10\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, \"\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      dataSource: this.state.searchFromApi,\n      columns: columnName,\n      size: \"small\",\n      rowKey: 'animal_id',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps)(ModalSearch);","map":{"version":3,"sources":["F:/Web/react.js/src/component/Animal/subAnimalServey/ModalSearch.jsx"],"names":["React","Modal","Button","Form","Input","Table","message","AnimalDataSearch","AnimalDataService","connect","mapStateToProps","state","dataProps","ModalSearch","Component","constructor","onSearch","setState","ModalVisibel","onSubmit","e","varlue","id","undefined","fName","lName","dataRes","searchFromApi","result","err","error","Tables","animal_id","resultService","props","dispatch","type","data","render","columnName","title","dataIndex","key","width","text","sm","span","lg","offset","md"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Modal, Button, Form, Input, Table, message } from 'antd'\r\nimport { AnimalDataSearch, AnimalDataService } from '../../../api/AnimalApis'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dataProps: state\r\n    }\r\n}\r\n\r\nclass ModalSearch extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            ModalVisibel: false,\r\n            searchFromApi: []\r\n        }\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.setState({ ModalVisibel: true })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        let varlue = { ...e }\r\n\r\n        if (varlue.id === undefined || varlue.id === \"\") {\r\n            varlue.id = \" \"\r\n        }\r\n        if (varlue.fName === undefined || varlue.fName === \"\") {\r\n            varlue.fName = \" \"\r\n        }\r\n        if (varlue.lName === undefined || varlue.lName === \"\") {\r\n            varlue.lName = \" \"\r\n        }\r\n\r\n        try {\r\n            let dataRes = await AnimalDataSearch(varlue)\r\n            this.setState({\r\n                searchFromApi: dataRes.result\r\n            })\r\n        } catch (err) {\r\n            message.error('Not Connect to Internet')\r\n        }\r\n    }\r\n\r\n    Tables = async (e) => {\r\n        let id = e.animal_id,\r\n            resultService = await AnimalDataService({ id })\r\n        this.props.dispatch({\r\n            type: 'serviceList',\r\n            data: resultService,\r\n        })\r\n        this.props.dispatch({\r\n            type: 'animalData',\r\n            data: e\r\n        })\r\n        this.setState({\r\n            ModalVisibel: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const columnName = [\r\n            {\r\n                title: 'ID',\r\n                dataIndex: 'animal_id',\r\n                key: 'animal_id',\r\n                width: '10%'\r\n            },\r\n            {\r\n                title: 'ชื่อ',\r\n                dataIndex: 'animal_fname',\r\n                key: 'animal_id',\r\n                width: '15%',\r\n                render: (text, animal_id) => <a onClick={() => this.Tables(animal_id)}>{text}</a>\r\n            },\r\n            {\r\n                title: 'นามสกุล',\r\n                dataIndex: 'animal_lname',\r\n                key: 'animal_id',\r\n                width: '15%',\r\n                render: (text, animal_id) => <a onClick={() => this.Tables(animal_id)}>{text}</a>\r\n            },\r\n            {\r\n                title: 'ชื่อเล่น',\r\n                dataIndex: 'animal_nick_name',\r\n                key: 'animal_id',\r\n                width: '15%',\r\n                render: (text, animal_id) => <a onClick={() => this.Tables(animal_id)}>{text}</a>\r\n            },\r\n            {\r\n                title: 'วันเกิด',\r\n                dataIndex: 'animal_birthday',\r\n                key: 'animal_id',\r\n                width: '15%',\r\n                render: (text, animal_id) => <a onClick={() => this.Tables(animal_id)}>{text}</a>\r\n            },\r\n            {\r\n                title: 'อายุ',\r\n                dataIndex: 'animal_age',\r\n                key: 'animal_id',\r\n                width: '25%',\r\n                render: (text, animal_id) => <a onClick={() => this.Tables(animal_id)}>{text}</a>\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Button\r\n                    onClick={this.onSearch}\r\n                >\r\n                    {'ค้นหาข้อมูล'}\r\n                </Button>\r\n                <Modal\r\n                    visible={this.state.ModalVisibel}\r\n                    onCancel={() => this.setState({ ModalVisibel: false })}\r\n                    footer={null}\r\n                >\r\n                    <Form\r\n                        labelCol={{ sm: { span: 3 }, lg: { span: 3 } }}\r\n                        onFinish={this.onSubmit}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"id\"\r\n                            label=\"รหัส\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"fName\"\r\n                            label=\"ชื่อจริง\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"ชื่อเล่น\"\r\n                            name=\"lName\"\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            wrapperCol={{\r\n                                lg: { span: 8, offset: 3 },\r\n                                md: { span: 24, offset: 10 }\r\n                            }}\r\n                        >\r\n                            <Button htmlType=\"submit\">ค้นหา</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <hr />\r\n                    <Table\r\n                        dataSource={this.state.searchFromApi}\r\n                        columns={columnName}\r\n                        size=\"small\"\r\n                        rowKey={'animal_id'}\r\n                    />\r\n                </Modal>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ModalSearch)"]},"metadata":{},"sourceType":"module"}